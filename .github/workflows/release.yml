name: 'C++ Sparse Matrix'

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_GOOGLE_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@v1.1.0
        with:
            doxyfile-path: ./Doxyfile
            working-directory: .
      - name: GH Pages Deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./doc/html/
            enable_jekyll: false
            allow_empty_commit: false
            force_orphan: true
            publish_branch: gh-pages
      - name: Set file name
        id: run_ls
        run: echo ::set-output name=FILE_NAME::$(ls | grep *.deb)
      - name: Che—Åk package deb
        run: dpkg -c ./${{steps.run_ls.outputs.FILE_NAME}}
      - name: Create Release
        if: ${{github.ref_type == 'tag'}}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{steps.run_ls.outputs.FILE_NAME}}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: ${{github.ref_type == 'tag'}}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{steps.run_ls.outputs.FILE_NAME}}
          asset_name: ${{steps.run_ls.outputs.FILE_NAME}}
          asset_content_type: application/vnd.debian.binary-package